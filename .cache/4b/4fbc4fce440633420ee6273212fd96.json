{"id":"less/flex.css","dependencies":[{"name":"_css_loader","parent":"/Users/cssian/Projects/materialistic-elm/less/flex.css","resolved":"/Users/cssian/.nvm/versions/node/v8.11.2/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/Users/cssian/Projects/materialistic-elm/package.json","includedInParent":true,"mtime":1543606492555}],"generated":{"css":"/*  FLEX.css  edition 2.3 \n    Based on MDN documentation.\n    These classes use only the standard rules; Please use with an Autoprefixer for browser support.\n\n    Naming Rules:\n      - three letter abbreviations for all terms\n      - proceed left-to-right, from most general to most specific\n\n      aro :: around\n      ato :: auto\n      bas :: baseline\n      btw :: between\n      cen :: center\n      col :: column\n      con :: content\n      eig :: eight\n      end :: end\n      fiv :: five\n      flx :: flex\n      fou :: four\n      itm :: item\n      its :: items\n      jus :: justify\n      nin :: nine\n      no  :: no\n      one :: one\n      rev :: reverse\n      row :: row\n      sch :: stretch\n      sel :: self\n      sev :: seven\n      six :: six\n      str :: start\n      thr :: three\n      two :: two\n      wrp :: wrap\n*/\n\n/*  DECLARATION  ---------------------------------------------------------------\n\n/*  FLEX CONTAINER ( SET )\n    Summary:    Make the elements inside a <tag> flow with flexbox by setting the tag's display property to 'flex'.\n    Reference:  https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_flexbox_to_lay_out_web_applications\n*/\n.flx,\n.flx-set {\n  display: flex;\n}\n\n/*  FLEX ITEM\n    Summary:    A shorthand property specifying the ability of a flex item to alter its dimensions to fill available space. Summarizes {flex-grow, flex-shrink, flex-basis }\n    Reference:  https://developer.mozilla.org/en-US/docs/Web/CSS/flex\n    Default:    0 1 0;\n*/\n.flx-itm {\n  flex: 1 1 0;\n}\n.flx-itm-ato {\n  flex: 1 1 auto;\n}\n\n/*  DIRECTION ( ORIENTATION )  -------------------------------------------------\n    Summary:    Specifies how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n    Options:\n        Column: set main axis to vertical\n        Row :   set main axis to horizontal\n    Reference:  https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction\n    Default:    flex-direction: row;\n*/\n.flx-col {\n  flex-direction: column ;\n}\n.flx-row {\n  flex-direction: row;\n}\n\n/*  JUSTIFICATION (Main axis)   ------------------------------------------------\n    Summary:    Aefines how the browser distributes space between and around flex items along the main-axis of their container.\n    Reference:  https://developer.mozilla.org/en-US/docs/Web/CSS/justify-con\n    Default:    justify-con: flex-start;\n*/\n/* Pack items around the center */\n.flx-jus-con-cen {\n  justify-content: center;\n}\n/* Pack flex items from the start  */\n.flx-jus-con-str {\n  justify-content: flex-start;\n}\n/* Pack items from the end */\n.flx-jus-con-end {\n  justify-content: flex-end;\n}\n/* Distribute items evenly, first item at the start, last at the end */\n.flx-jus-con-btw {\n  justify-content: space-between;\n}\n/* Distribute items evenly, items have equal space around them */\n.flx-jus-con-aro {\n  justify-content: space-around;\n}\n\n/*\n    ALIGN CONTENT ( Cross axis )  ----------------------------------------------\n    Summary:   Aligns a flex container's lines within the flex container when there is extra space on the cross-axis.\n    Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/align-con\n    Default:   align-con: flex-start;\n*/\n/* Pack lines from the cross-axis start */\n.flx-aln-con-str {\n  align-content: flex-start;\n}\n/* Pack lines to the cross-axis end */\n.flx-aln-con-end {\n  align-content: flex-end;\n}\n/* Pack lines around the cross-axis center */\n.flx-aln-con-cen {\n  align-content: center;\n}\n/* Distribute lines along the cross-axis, start to end */\n.flx-aln-con-btw {\n  align-content: space-between;\n}\n/* Distribute lines along the cross-axis, equally spaced */\n.flx-aln-con-aro {\n  align-content: space-around;\n}\n/* Stretch lines to occupy the whole cross-axis */\n.flx-aln-con-sch {\n  align-content: stretch;\n}\n\n/*\n    ALIGN ITEMS ( Cross axis )  ------------------------------------------------\n    Summary:   Aligns flex items of the current flex line the same way as justify-con but in the perpendicular direction.\n    Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/align-items\n    Default:   align-items: stretch;\n*/\n/* Center items in the cross-axis */\n.flx-aln-its-cen {\n  align-items: center;\n}\n/* Align to cross-start */\n.flx-aln-its-str {\n  align-items: flex-start;\n}\n/* Align to cross-end */\n.flx-aln-its-end {\n  align-items: flex-end;\n}\n/* Align the items' baselines */\n.flx-aln-its-bas {\n  align-items: baseline;\n}\n/* Stretch the items to fit DEFAULT VALUE  */\n.flx-aln-its-sch {\n  align-items: stretch;\n}\n\n/*\n    ALIGN SELF ( Cross axis )  ------------------------------------------------\n    Summary:   Aligns flex items of the current flex line overriding the align-items value.\n    Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/align-self\n    Default:   align-self: auto;\n*/\n/*  Computes to parent's align-items value or stretch if the element has no parent.  */\n.flx-aln-sel-ato {\n  align-self: auto;\n}\n/*  Cross-start margin edge of the flex item is flushed with the cross-start edge of the line.  */\n.flx-aln-sel-str {\n  align-self: flex-start;\n}\n/*  Cross-end margin edge of the flex item is flushed with the cross-end edge of the line.  */\n.flx-aln-sel-end {\n  align-self: flex-end;\n}\n/* Flex item's margin box is centered within the line on the cross-axis. If the cross-size of the item is larger than the flex container, it will overflow equally in both directions.  */\n.flx-aln-sel-cen {\n  align-self: center;\n}\n/*  All flex items are aligned such that their baselines align. The item with the largest distance between its cross-start margin edge and its baseline is flushed with the cross-start edge of the line.  */\n.flx-aln-sel-bas {\n  align-self: baseline;\n}\n/*  Flex items are stretched such as the cross-size of the item's margin box is the same as the line while respecting width and height constraints.  */\n.flx-aln-sel-sch {\n  align-self: stretch;\n}\n\n/*\n    WRAPPING -------------------------------------------------------------------\n    Summary:   Specifies whether flex items are forced into a single line or can be wrapped onto multiple lines. \n               If wrapping is allowed, this property also enables you to control the direction in which lines are stacked.\n    Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap\n    Default:   flex-wrap: nowrap;\n*/\n.flx-wrp-no {\n  flex-wrap: nowrap;\n}\n.flx-wrp-rev {\n  flex-wrap: wrap-reverse;\n}\n.flx-wrp {\n  flex-wrap: wrap;\n}\n\n/*\n    VISUAL ORDER ---------------------------------------------------------------\n    Summary:   Specifies the order used to lay out flex items in their flex container. Elements are laid out in the ascending order of the order value.\n               Elements with the same order value are laid out in the order in which they appear in the source code.\n    Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/order\n    Default:   order: 0; { no order }\n*/\n.flx-ord-one {\n  order: 1;\n}\n.flx-ord-two {\n  order: 2;\n}\n.flx-ord-thr {\n  order: 3;\n}\n.flx-ord-fou {\n  order: 4;\n}\n.flx-ord-fiv {\n  order: 5;\n}\n.flx-ord-six {\n  order: 6;\n}\n.flx-ord-sev {\n  order: 7;\n}\n.flx-ord-eig {\n  order: 8;\n}\n.flx-ord-nin {\n  order: 9;\n}","js":"var reloadCSS = require('_css_loader');\n\nmodule.hot.dispose(reloadCSS);\nmodule.hot.accept(reloadCSS);"},"hash":"cb15a2eb1c28e816c04393dc14339acc","cacheData":{"env":{}}}